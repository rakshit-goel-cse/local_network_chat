{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rakshit Work\\\\Desktop\\\\workspace\\\\local_network_chat\\\\local_chat\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport ChatBox from './chatBox';\nimport AddMsg from './addMessage';\nimport axios from 'axios';\nimport Login from './login/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [chatData, setChatData] = React.useState([]);\n  const [userName, setUserNam] = React.useState(\"\");\n  //  const bc= new BroadcastChannel(\"chatBoox\");\n  //  bc.addEventListener(\"message\", e=>{\n  //    setChatData([...chatData,e.data]);\n  //    console.log(\"msg from broad- \"+e);\n  //  })\n\n  //set username from cookies\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(userName));\n  }, [userName]);\n\n  //get data from backend every second\n  React.useEffect(() => {\n    axios.get(\"http://192.168.29.231:8000/data\").then(response => {\n      //    console.log(\"axios.get on launch\",response.data)\n      setChatData(response.data);\n    });\n  }, [setInterval(() => {\n    return;\n  }, 1000)]);\n\n  //set data at backend when adding text\n  const addChat = async msg => {\n    //setChatData([...chatData,msg]);\n    //    bc.postMessage(msg);\n    console.log(\"msg- \" + msg);\n    try {\n      await axios.post(\"http://192.168.29.231:8000/\", {\n        \"user\": userName,\n        \"msg\": msg\n      }).then(response => {\n        console.log(\"axios.get\", response.data);\n        setChatData(response.data);\n      });\n    } catch (e) {\n      console.log(\"error in front end axios\" + e);\n    }\n  };\n  if (userName === null || userName === \"\") {\n    const tempUser = JSON.parse(localStorage.getItem(\"user\"));\n    if (!tempUser) {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        setUser: setUserNam\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container row left grey lighten-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \" orange teal-text text-darken-1 center\",\n      children: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      chatData: chatData,\n      userName: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddMsg, {\n      addChat: addChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4rdWMvf+luzwJdClN9H89CXGPhE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","ChatBox","AddMsg","axios","Login","jsxDEV","_jsxDEV","App","_s","chatData","setChatData","useState","userName","setUserNam","localStorage","setItem","JSON","stringify","get","then","response","data","setInterval","addChat","msg","console","log","post","e","tempUser","parse","getItem","setUser","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/Rakshit Work/Desktop/workspace/local_network_chat/local_chat/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport ChatBox from './chatBox';\nimport AddMsg from './addMessage';\nimport axios from 'axios';\nimport Login from './login/login';\n\nfunction App() {\n  const [chatData,setChatData]=React.useState([]);\n  const [userName,setUserNam]=React.useState(\"\");\n//  const bc= new BroadcastChannel(\"chatBoox\");\n//  bc.addEventListener(\"message\", e=>{\n//    setChatData([...chatData,e.data]);\n//    console.log(\"msg from broad- \"+e);\n//  })\n\n//set username from cookies\nuseEffect(()=>{\n  localStorage.setItem(\"user\",JSON.stringify(userName));\n},[userName]);\n\n//get data from backend every second\nReact.useEffect(() => {\n  axios.get(\"http://192.168.29.231:8000/data\").then((response) => {\n//    console.log(\"axios.get on launch\",response.data)\n    setChatData(response.data)\n  });\n}, [\n\n  setInterval(()=>{\n    return \n  },1000)\n]); \n\n//set data at backend when adding text\n  const addChat=async(msg)=>{\n    //setChatData([...chatData,msg]);\n//    bc.postMessage(msg);\n    console.log(\"msg- \"+msg);\n    try{\n    await axios.post(\"http://192.168.29.231:8000/\",{\n      \"user\":userName,\"msg\":msg\n    }).then((response)=>{\n      console.log(\"axios.get\",response.data)\n      setChatData(response.data)\n    })\n  }\n  catch(e){\n    console.log(\"error in front end axios\"+e);\n  }\n  };\n\n\n  if (userName === null || userName === \"\" ) {\n    const tempUser = JSON.parse(localStorage.getItem(\"user\"));\n    if(!tempUser){\n     return(\n       <Login setUser={setUserNam}/>\n     )\n    }\n  }\n  return (\n    <div className='container row left grey lighten-4'>\n      <h5 className=' orange teal-text text-darken-1 center'>{userName}</h5>\n      <ChatBox chatData={chatData} userName={userName}/>\n      <AddMsg addChat={addChat}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}